version: '2'

services:
  cassandra-1:
    image: cassandra:${CASSTAG}
    networks:
      - stargate
    mem_limit: 2G
    cap_add:
      - IPC_LOCK
    ulimits:
      memlock: -1
    environment:
      - MAX_HEAP_SIZE=1536M
      - HEAP_NEWSIZE=400M
      - CASSANDRA_CLUSTER_NAME=c4-${CASSTAG}-cluster
    healthcheck:
      test: [ "CMD", "cqlsh", "-u cassandra", "-p cassandra" ,"-e describe keyspaces" ]
      interval: 15s
      timeout: 10s
      retries: 10

  cassandra-2:
    image: cassandra:${CASSTAG}
    networks:
      - stargate
    mem_limit: 2G
    cap_add:
      - IPC_LOCK
    ulimits:
      memlock: -1
    depends_on:
      cassandra-1:
        condition: service_healthy
    environment:
      - MAX_HEAP_SIZE=1536M
      - HEAP_NEWSIZE=400M
      - CASSANDRA_SEEDS=cassandra-1
      - CASSANDRA_CLUSTER_NAME=c4-${CASSTAG}-cluster
    healthcheck:
      test: [ "CMD", "cqlsh", "-u cassandra", "-p cassandra" ,"-e describe keyspaces" ]
      interval: 15s
      timeout: 10s
      retries: 10

  coordinator:
    image: stargateio/coordinator-4_0:${SGTAG}
    depends_on:
      cassandra-1:
        condition: service_healthy
    networks:
      - stargate
    ports:
      - "9042:9042" # CQL service
      - "8081:8081" # REST auth
      - "8084:8084" # Health check
      - "8090:8090" # gRPC interface for CRUD?
    mem_limit: 2G
    cap_add:
      - IPC_LOCK
    ulimits:
      memlock: -1
    environment:
      - JAVA_OPTS="-Xmx1536M"
      - CLUSTER_NAME=c4-${CASSTAG}-cluster
      - CLUSTER_VERSION=4.0
      - SEED=cassandra-1
      - RACK_NAME=rack1
      - DATACENTER_NAME=datacenter1
      - ENABLE_AUTH=true
    healthcheck:
      test: curl -f http://localhost:8084/checker/readiness || exit 1
      interval: 15s
      timeout: 10s
      retries: 10

  debugger:
    image: cassandra:${CASSTAG}
    network_mode: host
    # networks:
    #   - stargate
    cap_add:
      - NET_RAW
      - NET_ADMIN
    mem_limit: 2G
    environment:
      - CASSANDRA_CLUSTER_NAME=c4-${CASSTAG}-cluster
    # set command to sleep:
    command: |
      bash -c '
        set -xe
        apt-get update && apt-get install -y tshark
        # tail -f /dev/null # keep container running
        sudo tshark -i lo -Y "tcp.port == 7000" # -T fields -d tcp.port==9042,echo -e frame.time -e ip.src -e tcp.srcport -e ip.dst -e tcp.dstport -e tcp.len -e tcp.seq -e tcp.stream -e echo.data
      '

  #graphqlapi:
  #  image: stargateio/graphqlapi:${SGTAG}
  #  depends_on:
  #    coordinator:
  #      condition: service_healthy
  #  networks:
  #    - stargate
  #  ports:
  #    - "8080:8080" # GraphQL interface
  #  mem_limit: 2G
  #  environment:
  #    - JAVA_MAX_MEM_RATIO=75
  #    - JAVA_INITIAL_MEM_RATIO=50
  #    - GC_CONTAINER_OPTIONS=-XX:+UseG1GC
  #    - QUARKUS_GRPC_CLIENTS_BRIDGE_HOST=coordinator
  #    - QUARKUS_GRPC_CLIENTS_BRIDGE_PORT=8091
  #    - QUARKUS_HTTP_ACCESS_LOG_ENABLED=${REQUESTLOG}
  #    - QUARKUS_LOG_LEVEL=${LOGLEVEL}
  #  healthcheck:
  #    test: curl -f http://localhost:8080/stargate/health || exit 1
  #    interval: 5s
  #    timeout: 10s
  #    retries: 10

networks:
  stargate:
